---
- name: Create an organization to contain all approval gate resources
  command: >
    tower-cli organization create
    --format json
    --name "Workflow Approvals"
- name: Create a label for all approvals related job templates
  command: >
    tower-cli label create
    --format json
    --force-on-exists
    --name "Workflow Approvals"
    --organization "Workflow Approvals"
- name: Create a label for approval request job templates
  command: >
    tower-cli label create
    --format json
    --force-on-exists
    --name "Approval Request"
    --organization "Workflow Approvals"
- name: Ensure a project exists that pulls from the tower-workflow-approvals repo
  command: >
    tower-cli project create
    --format json
    --name "Workflow Approvals"
    --organization "Workflow Approvals"
    --scm-type git
    --scm-url "https://github.com/wtcross/tower-workflow-approvals.git"
    --scm-branch master
    --scm-update-on-launch true
- name: Create an inventory for approvals
  command: >
    tower-cli inventory create
    --format json
    --force-on-exists
    --name "Workflow Approvals"
    --organization "Workflow Approvals"
- name: Create an Ansible Tower credential for workflow administration
  command: >
    tower-cli credential create
    --format json
    --force-on-exists
    --name "Workflow Approval Admin"
    --organization "Workflow Approvals"
    --credential-type "Ansible Tower"
    --inputs "{{ inputs | from_yaml | to_yaml }}"
  no_log: yes
  vars:
    inputs: |
      host: https://localhost
      {{ lookup('pipe', 'tower-cli config username') }}
      {{ lookup('pipe', 'tower-cli config password') }}
- name: Create an empty machine credential for all approval request job templates
  command: >
    tower-cli credential create
    --format json
    --force-on-exists
    --name "Workflow Approvals"
    --organization "Workflow Approvals"
    --credential-type Machine
- name: Create a Workflow Approval Gate credential type
  command: >
    tower-cli credential_type create
    --format json
    --force-on-exists
    --kind cloud
    --name "Workflow Approval Gate"
    --description "Information needed to automate workflow approvals"
    --inputs "{{ inputs | to_yaml }}"
    --injectors "{{ injectors | to_yaml }}"
  vars:
    inputs:
      fields:
        - help_text: The Ansible Tower base URL to authenticate with.
          type: string
          id: host
          label: Ansible Tower Hostname
        - type: string
          id: username
          label: Username
        - secret: true
          type: string
          id: password
          label: Password
        - type: string
          id: approval_gate_name
          label: Approval Gate Name
    injectors:
      env:
        TOWER_USERNAME: "{{ '{{' }} username {{ '}}' }}"
        TOWER_HOST: "{{ '{{' }} host {{ '}}' }}"
        TOWER_PASSWORD: "{{ '{{' }} password {{ '}}' }}"
      extra_vars:
        approval_organization: Workflow Approvals
        approval_project: Workflow Approvals
        approval_inventory: Workflow Approvals
        approval_machine_credential: Workflow Approvals
        approval_gate_tower_credential: Approval Gate / {{ '{{' }} approval_gate_name {{ '}}' }}
        approval_gate_team: Approval Gate / {{ '{{' }} approval_gate_name {{ '}}' }}
        approval_gate_name: "{{ '{{' }} approval_gate_name {{ '}}' }}"
- name: Create a job template for destroying approvals
  command: >
    tower-cli job_template create
    --format json
    --force-on-exists
    --name "Destroy Approval Request"
    --project "Workflow Approvals"
    --playbook destroy-approval-request.yml
    --inventory "Workflow Approvals"
    --credential "Workflow Approvals"
    --survey-spec '{{ survey_spec | to_json }}'
    --survey-enabled true
    --job-type run
  vars:
    survey_spec:
      name: ""
      description: ""
      spec:
        - question_description: What is the ID of the approval job template to destroy?
          min: null
          default: no
          max: null
          required: true
          choices: ""
          variable: approval_job_template_id
          question_name: Approval Job Template ID
          type: integer
        - question_description: What is the ID of the current running approval job?
          min: null
          default: no
          max: null
          required: true
          choices: ""
          variable: approval_job_id
          question_name: Approval Job ID
          type: integer
- name: Associate the tower credential
  command: >
    tower-cli job_template associate_credential
    --format json
    --job-template "Destroy Approval Request"
    --credential "Workflow Approval Admin"
- name: Associate the approvals label to the job template
  command: >
    tower-cli job_template associate_label
    --format json
    --job_template "Destroy Approval Request"
    --label "Workflow Approvals"
- name: Create a job template for creating approval gates
  command: >
    tower-cli job_template create
    --format json
    --force-on-exists
    --name "Create Approval Gate"
    --project "Workflow Approvals"
    --playbook create-approval-gate.yml
    --inventory "Workflow Approvals"
    --credential "Workflow Approvals"
    --survey-spec '{{ survey_spec | to_json }}'
    --survey-enabled true
    --job-type run
  vars:
    survey_spec:
      name: ""
      description: ""
      spec:
        - question_description: >
            The name to use for this approval gate.
            Keep in mind it will be used when creating resources in Tower.
          min: 2
          max: 50
          default: no
          required: true
          choices: ""
          variable: approval_gate_name
          question_name: Approval Gate Name
          type: text
- name: Attach the tower credential
  command: >
    tower-cli job_template associate_credential
    --format json
    --job-template "Create Approval Gate"
    --credential "Workflow Approval Admin"
- name: Associate the approvals label to the job template
  command: >
    tower-cli job_template associate_label
    --format json
    --job_template "Create Approval Gate"
    --label "Workflow Approvals"
