---
- name: If Ansible does not provide a system UUID, get a random one.
  shell: "echo 'import uuid; print(uuid.uuid4())' | awx-python"
  register: system_uuid
  changed_when: False

- name: Remove the old celeryd.py config file (if it exists)
  file:
    path: /etc/tower/conf.d/celeryd.py
    state: absent

- name: Write a ha.conf file to /etc/tower that contains the system UUID.
  template:
    dest: /etc/tower/conf.d/ha.py
    force: no
    mode: '0640'
    group: awx
    owner: root
    src: ha.py

- name: Register the tower instance in the database.
  shell: awx-manage provision_instance --hostname="{{ cluster_host_identifier }}"
  args:
    executable: /bin/bash
  become_user: awx
  become: True
  register: provision_instance
  changed_when: "'changed: True' in provision_instance.stdout"

- name: Register tower instance groups.
  shell: >
      awx-manage register_queue
      --queuename="{{ item|regex_replace('^instance_group_','') }}"
      --hostnames="{{ ','.join(groups[item] | map('extract', hostvars, 'cluster_host') | list | select('defined'))  }}"
  args:
    executable: /bin/bash
  become_user: awx
  become: True
  run_once: True
  register: register_queue
  changed_when: "'changed: True' in register_queue.stdout"
  when: item.startswith('instance_group_') or item == 'tower'
  with_items: "{{ groups }}"

- name: Create the default organization if it is needed.
  shell: awx-manage create_preload_data
  register: cdo
  changed_when: "'added' in cdo.stdout"
  when: create_preload_data|bool and inventory_hostname == groups['tower'][0]
