---
# tasks file for pulp_api
- block:

    - name: Apply the SELinux type to the TCP port that pulpcore-api listens on
      seport:
        ports: '{{ pulp_api_bind.split(":")[1] }}'
        proto: tcp
        setype: pulpcore_port_t
      become: true
      when:
        - not (pulp_api_bind.startswith('unix:'))
        - ansible_facts.os_family == 'RedHat'
        # We can also try using seport's ignore_selinux_state variable
        - ansible_facts.selinux.status == "enabled"

    - name: Install pulpcore-api service files
      template:
        src: pulpcore-api.service.j2
        dest: /lib/systemd/system/pulpcore-api.service
        owner: root
        group: root
        mode: 0644
      become: true
      notify: Restart pulpcore-api.service

    - name: Set the pulpcore-api service state
      systemd:
        name: pulpcore-api.service
        state: started
        enabled: true
        daemon_reload: true
      become: true

    - name: Ensure python-cryptography is installed
      package:
        name: '{{ pulp_python_cryptography }}'
      become: true

    - name: Create cert directory to hold token authentication key
      file:
        path: "{{ pulp_certs_dir }}"
        state: directory
        owner: "{{ pulp_user }}"
        group: "{{ pulp_group }}"
        mode: 0700
      become: true

    - import_tasks: generate_token_auth_key.yml
      when: pulp_token_auth_key is undefined

    - import_tasks: import_token_auth_key.yml
      when: pulp_token_auth_key is defined

    - name: Extract token authentication public key
      openssl_publickey:
        path: "{{ pulp_certs_dir }}/token_public_key.pem"
        privatekey_path: "{{ pulp_certs_dir }}/token_private_key.pem"
        owner: "{{ pulp_user }}"
        group: "{{ pulp_group }}"
      become: true
      become_user: "{{ pulp_user }}"
      when:
        - (ansible_version.major > 2) or (ansible_version.major == 2 and ansible_version.minor >= 9)

    - name: Extract token authentication public key (ansible 2.8 workaround)
      command:
        cmd: "openssl ec -in {{ pulp_certs_dir }}/token_private_key.pem -pubout -out {{ pulp_certs_dir }}/token_public_key.pem"
        creates: "{{ pulp_certs_dir }}/token_public_key.pem"
      become: true
      become_user: "{{ pulp_user }}"
      when:
        - ansible_version.major == 2
        - ansible_version.minor < 9

  when: pulp_install_api_service | bool
