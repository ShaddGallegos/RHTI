---
  - name: "Playing CIS Hardenng playbook on SUSE Linux 15"
    hosts: localhost
    tasks:
      - name: "1.1.1 Disable unused filesystems"
        lineinfile:
          path: /etc/modprobe.d/CIS.conf
          line: "{{ item.line }}"
          state: present
          create: yes
        with_items:
          - { line: 'install  dccp  /bin/true' }
          - { line: 'install  sctp  /bin/true' }
          - { line: 'install  rds  /bin/true' }
          - { line: 'install  tipc  /bin/true' }
          - { line: 'install cramfs  /bin/true' }
          - { line: 'install hfs  /bin/true' }
          - { line: 'install hfsplus  /bin/true' }
          - { line: 'install squashfs  /bin/true' }
          - { line: 'install udf  /bin/true' }
          - { line: 'install fat /bin/true' }
          - { line: 'install vfat  /bin/true' }
          - { line: 'install msdos  /bin/true' }

      - name: "1.1.2 Ensure /tmp is configured"
        mount:
          name: /tmp
          src: tmpfs
          state: mounted
          fstype: tmpfs
          opts: "defaults,rw,nosuid,nodev,noexec,relatime"

#      - name: "1.1.6 Ensure /dev/shm is configured"
#        mount:
#          name: /dev/shm
#          src: tmpfs
#          state: mounted
#          fstype: tmpfs
#          opts: "defaults,noexec,nodev,nosuid"

      - name: "1.3.2 Ensure sudo commands use pty"
        lineinfile:
          dest: /etc/sudoers
          insertafter: "^Defaults "
          line: 'Defaults use_pty'
          backup: yes

      - name: "1.3.3 Ensure sudo log file exists"
        lineinfile:
          dest: /etc/sudoers
          insertafter: "^Defaults "
          line: "Defaults logfile=/var/log/sudo.log"
          backup: yes

      - name: "1.4.1 Ensure AIDE is installed"
        yum:
          name: aide
          state: present
        check_mode: true
        register: package_check

      - name: "1.4.1.1 Intialise AIDE tool if AIDE is installed"
        command: " {{ item }} "
        with_items:
          - aide --init
          - mv /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz
        when: package_check is succeeded

      - name: "1.4.2 Filesystem Integrity Check with AIDE"
        cron:
          name: "Filesystem Integrity Check"
          user: "root"
          minute: "59"
          hour: "*"
          job: "/usr/sbin/aide --check"
          state: present
        when: package_check is succeeded

      - name: "1.5.2 Ensure permissions on bootloader config are configured"
        command: " {{ item }} "
        with_items:
           - chmod og-rwx /boot/grub2/grub.cfg
           - chown root /boot/grub2/grub.cfg
           - chgrp root /boot/grub2/grub.cfg

      - name: "1.6.1 Ensure core dumps are restricted"
        lineinfile:
          path: /etc/security/limits.conf
          regexp: "^[^#].*core"
          line: "*   hard   core   0"
          state: present
          backup: yes

      - name: "Ensure SYSCTL configuration is available as per CIS "
        blockinfile:
          dest: /etc/sysctl.conf
          marker: "CIS Standards SYSCTL Parameters"
          block: |
            net.ipv4.ip_forward = 0
            net.ipv6.conf.all.forwarding = 0
            net.ipv4.conf.all.send_redirects = 0
            net.ipv4.conf.default.send_redirects = 0
            net.ipv4.conf.all.accept_source_route = 0
            net.ipv4.conf.default.accept_source_route = 0
            net.ipv6.conf.all.accept_source_route = 0
            net.ipv6.conf.default.accept_source_route = 0
            net.ipv4.conf.all.accept_redirects = 0
            net.ipv4.conf.default.accept_redirects = 0
            net.ipv6.conf.all.accept_redirects = 0
            net.ipv6.conf.default.accept_redirects = 0
            net.ipv4.conf.all.log_martians = 1
            net.ipv4.conf.default.log_martians = 1
            net.ipv6.conf.all.accept_ra = 0
            net.ipv6.conf.default.accept_ra = 0
            kernel.randomize_va_space = 2
            fs.suid_dumpable = 0
            net.ipv6.conf.all.disable_ipv6 = 1
            net.ipv6.conf.default.disable_ipv6 = 1
            net.ipv4.conf.all.secure_redirects = 0
            net.ipv4.conf.default.secure_redirects = 0
            net.ipv4.icmp_echo_ignore_broadcasts = 1
            net.ipv4.icmp_ignore_bogus_error_responses = 1
            net.ipv4.conf.all.rp_filter = 1
            net.ipv4.conf.default.rp_filter = 1
            net.ipv4.tcp_syncookies = 1



#     - name: "1.7.1.1 Ensure AppArmor is installed"
#       zypper:
#         name: " {{ item }} "
#         state: present
#        with_items:
#          - apparmor-parser
#          - apparmor-profiles
#          - apparmor-utils
#          - libapparmor1

#     - name: "1.7.1.2 Ensure AppArmor is enabled in the bootloader configuration"

      - name: "Delete Existing Banner Files"
        file:
          path: "{{ item.path }}"
          state: absent
          backup: yes
        with_items:
          - { path: '/etc/motd' }
          - { path: '/etc/issue' }

      - name: "Ensure local login warning banner is configured properly"
        blockinfile:
          path: "{{ item.path }}"
          create: yes
          mode: u=rw,g=r,o=r
          marker: "#########################################"
          block: |
            This is Server.
            Authorized uses only. All activity may be monitored and reported.
        with_items:
          - { path: '/etc/motd' }
          - { path: '/etc/issue' }
          - { path: '/etc/issue.net' }

      - name: "2.2.4 Ensure CUPS is not installed"
        yum:
          name: "{{ item.name }}"
          state: absent
        with_items:
          - {name: 'cups' }
          - {name: 'telnet' }

      - name: "Ensure system is disabled when audit logs are full and Ensure audit logs are not automatically deleted"
        lineinfile:
          path: /etc/audit/auditd.conf
          regexp: "{{ item.regexp }}"
          line: "{{ item.line }}"
        loop:
          - { regexp: '^space_left_action', line: 'space_left_action = email' }
          - { regexp: '^action_mail_acct', line: 'action_mail_acct = root' }
          - { regexp: '^admin_space_left_action', line: 'admin_space_left_action = halt' }
          - { regexp: '^max_log_file_action', line: 'max_log_file_action = keep_logs' }

      - name: "Ensure events that modify date and time information are collected and  Ensure events that modify user/group information are collected "
        blockinfile:
          dest: /etc/audit/rules.d/audit.rules
          marker: "CIS Standards Rules"
          block: |
            -a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change
            -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
            -a always,exit -F arch=b64 -S clock_settime -k time-change
            -a always,exit -F arch=b32 -S clock_settime -k time-change
            -w /etc/localtime -p wa -k time-change
            -w /etc/group -p wa -k identity
            -w /etc/passwd -p wa -k identity
            -w /etc/gshadow -p wa -k identity
            -w /etc/shadow -p wa -k identity
            -w /etc/security/opasswd -p wa -k identity
            -a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale
            -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
            -w /etc/issue -p wa -k system-locale
            -w /etc/issue.net -p wa -k system-locale
            -w /etc/hosts -p wa -k system-locale
            -w /etc/sysconfig/network -p wa -k system-locale
            -w /etc/selinux/ -p wa -k MAC-policy
            -w /usr/share/selinux/ -p wa -k MAC-policy
            -w /var/log/faillog -p wa -k logins
            -w /var/log/lastlog -p wa -k logins
            -w /var/log/tallylog -p wa -k logins
            -w /var/run/utmp -p wa -k session
            -w /var/log/wtmp -p wa -k logins
            -w /var/log/btmp -p wa -k logins
            -a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
            -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod
            -a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
            -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod
            -a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
            -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod
            -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
            -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
            -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
            -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
            -a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
            -a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts
            -a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
            -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete
            -w /etc/sudoers -p wa -k scope
            -w /etc/sudoers.d/ -p wa -k scope
            -w /sbin/insmod -p x -k modules
            -w /sbin/rmmod -p x -k modules
            -w /sbin/modprobe -p x -k modules
            -a always,exit -F arch=b64 -S init_module -S delete_module -k modules
            -e 2

      - name: "Ensure rsyslog is configured to send logs to a remote log host"
        lineinfile:
          path: /etc/rsyslog.conf
          regexp: "^#?\\*\\.\\*\\s+"
          line: "*.*      @@_LOG_HOST"
#           line: "*.*      @@{{ LOG_HOST }}"
          state: present
          backup: yes

      - name: "Ensure rsyslog default file permissions configured"
        lineinfile:
          path: /etc/rsyslog.conf
#          search_string: "^$FileCreateMode "
          regexp: "^\\$FileCreateMode\\s+"
          insertbefore: BOF
          line: "$FileCreateMode 0640"
          backup: yes
          state: present

      - name: "4.2.2.1 Ensure journald is configured to send logs to rsyslog"
        lineinfile:
          path: /etc/systemd/journald.conf
          regexp: "{{ item.regexp }}"
          line: "{{ item.line }}"
        loop:
          - { regexp: '^#ForwardToSyslog', line: 'ForwardToSyslog=yes' }
          - { regexp: '^#Compress', line: 'Compress=yes' }
          - { regexp: '^#Storage', line: 'persistent=persistent' }

      - name: "Ensure permissions on all logfiles are configured"
        shell: "find -L /var/log -type f -exec chmod g-wx,o-rwx {} +"

      - name: "Ensure permissions on /etc/crontab are configured"
        file:
          path=/etc/crontab
          owner=root
          group=root
          mode=0600

      - name: "Ensure permissions on /etc/cron.hourly are configured"
        file:
          path=/etc/cron.hourly
          owner=root
          group=root
          mode=0600

      - name: "Ensure permissions on /etc/cron.daily are configured"
        file:
          path=/etc/cron.daily
          owner=root
          group=root
          mode=0600

      - name: "Ensure permissions on /etc/cron.weekly are configured"
        file:
          path=/etc/cron.weekly
          owner=root
          group=root
          mode=0600

      - name: "Ensure permissions on /etc/cron.monthly are configured"
        file:
          path=/etc/cron.monthly
          owner=root
          group=root
          mode=0600


      - name: "Ensure permissions on /etc/cron.d are configured"
        file:
          path: /etc/cron.d
          state: directory
          owner: root
          group: root
          mode: "0600"

      - name: "Ensure at/cron is restricted to authorized user"
        file:
          path: "{{ item.path }}"
          state: absent
          backup: yes
        with_items:
          - { path: '/etc/at.deny' }
          - { path: '/etc/cron.deny' }
#
      - name: "Ensure cron is restricted to authorized user"
        file:
          path: /etc/cron.allow
          state: touch
          owner: root
          group: root
          mode: "0600"

      - name: "Ensure at is restricted to authorized user"
        file:
          path: /etc/at.allow
          state: touch
          owner: root
          group: root
          mode: "0600"

      - name: "Ensure SSH LogLevel is appropriate"
        lineinfile:
          dest: /etc/ssh/sshd_config
          regexp: "^#LogLevel "
          line: "LogLevel INFO"
          backrefs: yes
          backup: yes
          validate: 'sshd -t -f %s'

      - name: "Ensure SSH X11 forwarding is disabled"
        lineinfile:
          dest: /etc/ssh/sshd_config
          regexp: "^x11forwarding "
          line: "x11forwarding no"
          backrefs: yes
          backup: yes
          validate: 'sshd -t -f %s'

      - name: "Ensure SSH MaxAuthTries is set to 4 or less"
        lineinfile:
          dest: /etc/ssh/sshd_config
          regexp: "^#MaxAuthTries "
          line: "MaxAuthTries 4"
          backrefs: yes
          backup: yes
          validate: 'sshd -t -f %s'

      - name: "Ensure SSH IgnoreRhosts is enabled"
        lineinfile:
          dest: /etc/ssh/sshd_config
          regexp: "^#IgnoreRhosts "
          line: "IgnoreRhosts yes"
          backrefs: yes
          backup: yes
          validate: 'sshd -t -f %s'

      - name: "Ensure SSH HostbasedAuthentication is disabled"
        lineinfile:
          dest: "/etc/ssh/sshd_config"
          regexp: "^#HostbasedAuthentication "
          line: "HostbasedAuthentication no"
          backrefs: yes
          backup: yes
          validate: 'sshd -t -f %s'

      - name: "5.2.10 Ensure SSH root login is disabled"
        lineinfile:
          dest: "/etc/ssh/sshd_config"
          regexp: "^permitrootlogin "
          line: "permitrootlogin no"
          backrefs: yes
          backup: yes
          validate: 'sshd -t -f %s'

      - name: "Ensure SSH PermitUserEnvironment is disabled"
        lineinfile:
          dest: /etc/ssh/sshd_config
          regexp: "^#PermitUserEnvironment "
          line: "PermitUserEnvironment no"
          backrefs: yes
          backup: yes
          validate: 'sshd -t -f %s'

      - name: "Ensure only strong MAC algorithms are used"
        lineinfile:
          path: /etc/ssh/sshd_config
          line: "MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512,hmac-sha2-256"
          backup: yes
          validate: 'sshd -t -f %s'

      - name: "Ensure that strong Key Exchange algorithms are used"
        lineinfile:
          path: '/etc/ssh/sshd_config'
          line: "KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellman-group14-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha256"
          state: present
          backup: yes
          validate: 'sshd -t -f %s'

      - name: "Ensure SSH Idle Timeout Interval is configured"
        lineinfile:
          dest: '/etc/ssh/sshd_config'
          regexp: "^#ClientAliveInterval "
          line: "ClientAliveInterval 300"
          validate: 'sshd -t -f %s'
#
      - name: "Ensure SSH Client Alive Count max is configured"
        lineinfile:
          dest: '/etc/ssh/sshd_config'
          regexp: "^#ClientAliveCountMax "
          line: "ClientAliveCountMax 0"
          validate: 'sshd -t -f %s'

      - name: "5.2.17 Ensure SSH LoginGraceTime is set to one minute or less"
        lineinfile:
          dest: '/etc/ssh/sshd_config'
          regexp: "^#LoginGraceTime "
          line: "#LoginGraceTime 60"
          validate: 'sshd -t -f %s'

      - name: Ensure password creation requirements are configured
        lineinfile:
          dest: "/etc/security/pwquality.conf"
          regexp: "{{ item.regexp }}"
          line: "{{ item.line }}"
          state: present
          create: yes
        with_items:
          - { regexp: "^#?minlen=", line: "minlen= 14" }
          - { regexp: "^#?dcredit=", line: "dcredit= -1" }
          - { regexp: "^#?ucredit=", line: "ucredit= -1" }
          - { regexp: "^#?ocredit=", line: "ocredit= -1" }
          - { regexp: "^#?lcredit=", line: "lcredit= -1" }

      - name: "5.3.3 Ensure password reuse is limited"
        command: "pam-config -a --pwhistory --pwhistory-remember=5"

      - name: "Ensure password expiration is 365 days or less"
        lineinfile:
          dest: '/etc/login.defs'
          regexp: "PASS_MAX_DAYS"
          line: "PASS_MAX_DAYS 364"
          state: present

      - name: "Ensure minimum days between password changes is 7 or more"
        lineinfile:
          dest: '/etc/login.defs'
          regexp: "PASS_MIN_DAYS"
          line: "PASS_MIN_DAYS 7"
          state: present

      - name: "Ensure inactive password lock is 30 days or less"
        shell: "useradd -D -f 30"

      - name: "Ensure default user shell timeout is 900 seconds or less"
        lineinfile:
          path: "{{ item.path }}"
          line: "TMOUT=900"
          backup: yes
        with_items:
          - { path: '/etc/bashrc' }
          - { path: '/etc/profile' }

      - name: "5.4.5 Ensure default user umask is configured"
        lineinfile:
          dest: '/etc/login.defs'
          regexp: "^UMASK "
          line: "UMASK  027"
          state: present


      - name: "Ensure access to the su command is restricted (/etc/pam.d/su)"
        pamd:
          name: su
          type: auth
          control: sufficient
          module_path: pam_rootok.so
          new_type: auth
          new_control: required
          new_module_path: pam_wheel.so
          module_arguments: 'use_uid'
          state: after
