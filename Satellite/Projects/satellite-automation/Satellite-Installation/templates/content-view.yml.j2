---

- name: configure content view {{ content_view.name }}
  redhat.satellite.content_view:{% raw %}
    username: "{{ satellite_admin_username }}"
    password: "{{ satellite_admin_password }}"
    validate_certs: false
    server_url: "{{ satellite_server_url }}"
    organization: "{{ satellite_organization }}"
{% endraw %}
    name: {{ content_view.name }}
{% if content_view.repos is defined %}
    repositories:
{% for repo in content_view.repos %}
      - name: {{ repo.repo | regex_replace('\\(','') | regex_replace('\\)','') + (' ' + repo.basearch if repo.basearch is defined else '') + (' ' + (repo.releasever | string) if repo.releasever is defined else '') }}
        product: {{ repo.product }}
{% endfor %}
{% endif %}
  register: publish_content_view{% raw %}
  delegate_to: "{{ delegate_host }}"
{% endraw %}

{% if content_view.filters is defined %}
{% for content_view_filter in content_view.filters %}
- name: configure filter {{ content_view_filter.name }} for {{ content_view.name }}
  theforeman.foreman.katello_content_view_filter:{% raw %}
    username: "{{ satellite_admin_username }}"
    password: "{{ satellite_admin_password }}"
    validate_certs: false
    server_url: "{{ satellite_server_url }}"
    organization: "{{ satellite_organization }}"
{% endraw %}
{% if content_view_filter.date_type is defined %}
    date_type: {{ content_view_filter.date_type }}
{% endif %}
{% if content_view_filter.description is defined %}
    description: {{ content_view_filter.description }}
{% endif %}
{% if content_view_filter.end_date is defined %}
    end_date: {{ content_view_filter.end_date }}
{% endif %}
{% if content_view_filter.errata_id is defined %}
    errata_id: {{ content_view_filter.errata_id }}
{% endif %}
{% if content_view_filter.filter_state is defined and content_view_filter.filter_state != 'present' %}
    filter_state: {{ content_view_filter.filter_state }}
{% endif %}
{% if content_view_filter.filter_type is defined %}
    filter_type: {{ content_view_filter.filter_type }}
{% endif %}
{% if content_view_filter.inclusion is defined %}
    inclusion: {{ content_view_filter.inclusion }}
{% endif %}
{% if content_view_filter.max_version is defined %}
    max_version: {{ content_view_filter.max_version }}
{% endif %}
{% if content_view_filter.min_version is defined %}
    min_version: {{ content_view_filter.min_version }}
{% endif %}
{% if content_view_filter.original_packages is defined %}
    original_packages: {{ content_view_filter.original_packages }}
{% endif %}
{% if content_view_filter.repositories is defined %}
    repositories: {{ content_view_filter.repositories }}
{% endif %}
{% if content_view_filter.start_date is defined %}
    start_date: {{ content_view_filter.start_date }}
{% endif %}
{% if content_view_filter.types is defined %}
    types: {{ content_view_filter.types }}
{% endif %}
{% if content_view_filter.version is defined %}
    version: {{ content_view_filter.version }}
{% endif %}
    content_view: {{ content_view.name }}
    name: {{ content_view_filter.name }}
    package_name: {{ content_view_filter.package_name }}{% raw %}
  delegate_to: "{{ delegate_host }}"
  register: content_view_filter
{% endraw %}
{% endfor %}
{% endif %}

- name: set current content view name
  set_fact:
    current_content_view: {{ content_view.name }}
  when:
    - (publish_content_view is defined and publish_content_view.changed) or (content_view_filter is defined and content_view_filter.changed)

- name: publish new version of the content view{% raw %}
  include_tasks: "{{ role_path }}/tasks/publish-content-view.yml"
  vars:
    content_view: "{{ current_content_view }}"
  when:
    - (publish_content_view is defined and publish_content_view.changed) or (content_view_filter is defined and content_view_filter.changed){% endraw %}
