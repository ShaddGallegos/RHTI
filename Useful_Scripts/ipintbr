#!/usr/bin/perl

##	ipintbr - print brief view of IPv4 interfaces.
#


use strict;
use warnings;

use constant DEFMTU => 1500;
use constant FMT => "%-9.9s  %-6.6s  %-18.18s  %-18.18s %s\n";

sub printinfo($$);

#main
{ my($ifinfo, @iflist);

# get a list of interfaces that are UP.
  open(IP,"/sbin/ip address show up|") or
   die "Can't open pipe from ip addr show: $!\n";
  while(my $line = <IP>) {
    chomp($line);
    if($line =~ /^\d+:/) {
      push(@iflist,$ifinfo) if(defined($ifinfo));
      ($ifinfo = $line) =~ s/^\d+:\s+//;
    }
    else {
      $ifinfo .= $line;
    }
  }
  push(@iflist,$ifinfo) if(defined($ifinfo));
  close(IP);

  printf(FMT, "Interface", "Status", "IPv4 Address/Mask", "MAC Address", "Details");
#
# Print loopback, then bonds, then rest...
  foreach my $line (@iflist) {
    my($ifname) = $line;
    $ifname =~ s/:.*$//;
    printinfo($ifname,$line) if($ifname eq "lo");
  }
  foreach my $line (@iflist) {
    my($ifname) = $line;
    $ifname =~ s/:.*$//;
    printinfo($ifname,$line) if($ifname =~ /^bond\d+/);
  }
  foreach my $line (@iflist) {
    my($ifname) = $line;
    $ifname =~ s/:.*$//;
    printinfo($ifname,$line) if($ifname ne "lo"  &&  $ifname !~ /^bond\d+/);
  }
  exit(0);
} # main

sub printinfo($$) {
  my($pri_ifname,$line) = @_;

  my $ifname = $pri_ifname;
  my $IPandMask = "";
  my $Master = "";
  my $Mtu = DEFMTU;
  if($line =~ /master (\w+)/) {
    my $bondif = $1;
    $Master = "Master: ${bondif}";
    if(open(F,"/proc/net/bonding/${bondif}")) {
      while(my $line = <F>) {
        chomp($line);
        if($line =~ /^Currently Active Slave: (\w+)/) {
          $Master = "Master: ${bondif} (Active)" if($1 eq $ifname);
        }
      }
      close(F);
    }
  }
  $Mtu = "$1" if($line =~ /mtu (\d+)/);
  my $LinkState = "Down";
  $LinkState = "Up" if($line =~ /LOWER_UP/); 
  my $MACAddr = "";
  $MACAddr = "$1" if($line =~ /link\/ether\s+([^ ]+)/);;
  my $details = $Master;
  $details .= " MTU: $Mtu" if($Mtu != DEFMTU);
  $details =~ s/^\s+//;
  if($Master ne "") {
    printf(FMT, $ifname, $LinkState, $IPandMask, $MACAddr, $details);
    return;
  }
# incoming line may have multiple inet clauses, and we need to print all
# of them.
# inet 10.140.88.2/24 brd 10.140.88.255 scope global eth0
# inet 127.0.0.1/8 scope host lo
  my $Pattern = 'inet\s+([^\s]+)\s+brd\s+[^\s]+\s+scope\s+global\s+([^\s]+)';
  $Pattern = 'inet\s+([^\s]+)\s+scope\s+host\s+([^\s]+)'
   if($pri_ifname =~ /^lo/);
 
  while($line =~ /${Pattern}/) {
    $IPandMask = $1;
    $ifname = $2;
    printf(FMT, $ifname, $LinkState, $IPandMask, $MACAddr, $details);
    $line =~ s/${Pattern}//;
  }
  return;
} # printinfo;
